// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/remote.proto

// Web exposes a backend server over gRPC.

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/johanbrandhorst/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActionRequest_Action int32

const (
	ActionRequest_Move ActionRequest_Action = 0
)

var ActionRequest_Action_name = map[int32]string{
	0: "Move",
}

var ActionRequest_Action_value = map[string]int32{
	"Move": 0,
}

func (x ActionRequest_Action) String() string {
	return proto.EnumName(ActionRequest_Action_name, int32(x))
}

func (ActionRequest_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{2, 0}
}

type PlayerID struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerID) Reset()         { *m = PlayerID{} }
func (m *PlayerID) String() string { return proto.CompactTextString(m) }
func (*PlayerID) ProtoMessage()    {}
func (*PlayerID) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{0}
}

func (m *PlayerID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerID.Unmarshal(m, b)
}
func (m *PlayerID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerID.Marshal(b, m, deterministic)
}
func (m *PlayerID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerID.Merge(m, src)
}
func (m *PlayerID) XXX_Size() int {
	return xxx_messageInfo_PlayerID.Size(m)
}
func (m *PlayerID) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerID.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerID proto.InternalMessageInfo

func (m *PlayerID) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type Entity struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	X                    int32    `protobuf:"varint,2,opt,name=X,proto3" json:"X,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=Y,proto3" json:"Y,omitempty"`
	Theta                int32    `protobuf:"varint,4,opt,name=Theta,proto3" json:"Theta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{1}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Entity) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Entity) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Entity) GetTheta() int32 {
	if m != nil {
		return m.Theta
	}
	return 0
}

type ActionRequest struct {
	Entity               *Entity              `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Action               ActionRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=web.ActionRequest_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ActionRequest) Reset()         { *m = ActionRequest{} }
func (m *ActionRequest) String() string { return proto.CompactTextString(m) }
func (*ActionRequest) ProtoMessage()    {}
func (*ActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{2}
}

func (m *ActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionRequest.Unmarshal(m, b)
}
func (m *ActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionRequest.Marshal(b, m, deterministic)
}
func (m *ActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionRequest.Merge(m, src)
}
func (m *ActionRequest) XXX_Size() int {
	return xxx_messageInfo_ActionRequest.Size(m)
}
func (m *ActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionRequest proto.InternalMessageInfo

func (m *ActionRequest) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *ActionRequest) GetAction() ActionRequest_Action {
	if m != nil {
		return m.Action
	}
	return ActionRequest_Move
}

type ActionResponse struct {
	Entity               *Entity  `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionResponse) Reset()         { *m = ActionResponse{} }
func (m *ActionResponse) String() string { return proto.CompactTextString(m) }
func (*ActionResponse) ProtoMessage()    {}
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{3}
}

func (m *ActionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionResponse.Unmarshal(m, b)
}
func (m *ActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionResponse.Marshal(b, m, deterministic)
}
func (m *ActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionResponse.Merge(m, src)
}
func (m *ActionResponse) XXX_Size() int {
	return xxx_messageInfo_ActionResponse.Size(m)
}
func (m *ActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActionResponse proto.InternalMessageInfo

func (m *ActionResponse) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type WorldResponse struct {
	Tiles                []byte   `protobuf:"bytes,1,opt,name=tiles,proto3" json:"tiles,omitempty"`
	Width                int32    `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorldResponse) Reset()         { *m = WorldResponse{} }
func (m *WorldResponse) String() string { return proto.CompactTextString(m) }
func (*WorldResponse) ProtoMessage()    {}
func (*WorldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{4}
}

func (m *WorldResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorldResponse.Unmarshal(m, b)
}
func (m *WorldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorldResponse.Marshal(b, m, deterministic)
}
func (m *WorldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorldResponse.Merge(m, src)
}
func (m *WorldResponse) XXX_Size() int {
	return xxx_messageInfo_WorldResponse.Size(m)
}
func (m *WorldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorldResponse proto.InternalMessageInfo

func (m *WorldResponse) GetTiles() []byte {
	if m != nil {
		return m.Tiles
	}
	return nil
}

func (m *WorldResponse) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *WorldResponse) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type EntityResponse struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityResponse) Reset()         { *m = EntityResponse{} }
func (m *EntityResponse) String() string { return proto.CompactTextString(m) }
func (*EntityResponse) ProtoMessage()    {}
func (*EntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{5}
}

func (m *EntityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityResponse.Unmarshal(m, b)
}
func (m *EntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityResponse.Marshal(b, m, deterministic)
}
func (m *EntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityResponse.Merge(m, src)
}
func (m *EntityResponse) XXX_Size() int {
	return xxx_messageInfo_EntityResponse.Size(m)
}
func (m *EntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntityResponse proto.InternalMessageInfo

func (m *EntityResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterEnum("web.ActionRequest_Action", ActionRequest_Action_name, ActionRequest_Action_value)
	proto.RegisterType((*PlayerID)(nil), "web.PlayerID")
	proto.RegisterType((*Entity)(nil), "web.Entity")
	proto.RegisterType((*ActionRequest)(nil), "web.ActionRequest")
	proto.RegisterType((*ActionResponse)(nil), "web.ActionResponse")
	proto.RegisterType((*WorldResponse)(nil), "web.WorldResponse")
	proto.RegisterType((*EntityResponse)(nil), "web.EntityResponse")
}

func init() { proto.RegisterFile("proto/remote.proto", fileDescriptor_b59cb7d8fa836ac0) }

var fileDescriptor_b59cb7d8fa836ac0 = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x51, 0x6b, 0xd4, 0x40,
	0x10, 0xbe, 0x5c, 0x7b, 0x69, 0x3b, 0xbd, 0x3b, 0x64, 0x5b, 0x4a, 0x8c, 0x2f, 0x65, 0x05, 0x29,
	0x3e, 0x24, 0x7a, 0x2a, 0x88, 0x08, 0x6a, 0xb9, 0x3e, 0x9c, 0x50, 0x29, 0xa9, 0x60, 0xeb, 0xdb,
	0xe6, 0x32, 0xcd, 0xa6, 0x4d, 0xb2, 0x71, 0xb3, 0xd7, 0x10, 0xfc, 0xe7, 0x7d, 0x92, 0xdb, 0xdd,
	0xd4, 0x9e, 0x72, 0xe8, 0x53, 0xf8, 0x66, 0xe7, 0xfb, 0xbe, 0xcc, 0x37, 0x03, 0xa4, 0x92, 0x42,
	0x89, 0x50, 0x62, 0x21, 0x14, 0x06, 0x1a, 0x90, 0x8d, 0x06, 0x63, 0xff, 0x49, 0x2a, 0x44, 0x9a,
	0x63, 0xa8, 0x4b, 0xf1, 0xe2, 0x2a, 0xc4, 0xa2, 0x52, 0xad, 0xe9, 0xf0, 0xdf, 0xa6, 0x99, 0xe2,
	0x8b, 0x38, 0x98, 0x8b, 0x22, 0xbc, 0x16, 0x9c, 0x95, 0xb1, 0x64, 0x65, 0xc2, 0x85, 0xac, 0xd5,
	0x6f, 0x82, 0x51, 0x4e, 0x45, 0xc5, 0x51, 0x5e, 0xd7, 0x86, 0x49, 0x7d, 0xd8, 0x3e, 0xcb, 0x59,
	0x8b, 0x72, 0x36, 0x25, 0x63, 0xe8, 0xcf, 0xa6, 0x9e, 0x73, 0xe8, 0x1c, 0xed, 0x44, 0xfd, 0xd9,
	0x94, 0x7e, 0x06, 0xf7, 0xa4, 0x54, 0x99, 0x6a, 0xff, 0x7c, 0x21, 0x43, 0x70, 0x2e, 0xbc, 0xfe,
	0xa1, 0x73, 0x34, 0x88, 0x9c, 0x8b, 0x25, 0xba, 0xf4, 0x36, 0x0c, 0xba, 0x24, 0xfb, 0x30, 0xf8,
	0xca, 0x51, 0x31, 0x6f, 0x53, 0x57, 0x0c, 0xa0, 0x3f, 0x61, 0xf4, 0x69, 0xae, 0x32, 0x51, 0x46,
	0xf8, 0x63, 0x81, 0xb5, 0x22, 0x4f, 0xc1, 0x45, 0x2d, 0xae, 0x65, 0x77, 0x27, 0xbb, 0x41, 0x83,
	0x71, 0x60, 0xfc, 0x22, 0xfb, 0x44, 0x5e, 0x82, 0xcb, 0x34, 0x4b, 0x9b, 0x8d, 0x27, 0x8f, 0x75,
	0xd3, 0x8a, 0x50, 0x87, 0x6c, 0x23, 0x25, 0xe0, 0x9a, 0x0a, 0xd9, 0x86, 0xcd, 0x53, 0x71, 0x8b,
	0x8f, 0x7a, 0xf4, 0x0d, 0x8c, 0x3b, 0x4e, 0x5d, 0x89, 0xb2, 0xc6, 0xff, 0x72, 0xa7, 0xe7, 0x30,
	0xfa, 0x26, 0x64, 0x9e, 0xdc, 0xb3, 0xf6, 0x61, 0xa0, 0xb2, 0x1c, 0x6b, 0x4d, 0x1a, 0x46, 0x06,
	0x2c, 0xab, 0x4d, 0x96, 0x28, 0x6e, 0x03, 0x31, 0x80, 0x1c, 0x80, 0xcb, 0x31, 0x4b, 0xb9, 0xb2,
	0xc9, 0x58, 0x44, 0x9f, 0xc3, 0xd8, 0xda, 0x74, 0xaa, 0x1e, 0x6c, 0x55, 0xac, 0xcd, 0x05, 0x4b,
	0xac, 0x6e, 0x07, 0x27, 0x77, 0x0e, 0x6c, 0x1d, 0xb3, 0xf9, 0x0d, 0x96, 0x09, 0x79, 0x0d, 0x3b,
	0x5f, 0xb0, 0x31, 0xbb, 0x22, 0x07, 0x81, 0xb9, 0x86, 0xa0, 0x5b, 0x6e, 0x70, 0xb2, 0xbc, 0x06,
	0x7f, 0xa4, 0xc7, 0xe8, 0x16, 0x4a, 0x7b, 0xe4, 0x1d, 0x8c, 0xce, 0x50, 0x5e, 0x09, 0x59, 0xd8,
	0x50, 0xc8, 0xdf, 0x09, 0xfa, 0x7b, 0x2b, 0x35, 0xf3, 0x57, 0xb4, 0x47, 0xde, 0xc3, 0xd0, 0x8e,
	0x6f, 0x36, 0xb6, 0xce, 0xd4, 0x48, 0xae, 0x24, 0x45, 0x7b, 0xe4, 0x03, 0x0c, 0xcd, 0x9c, 0xe7,
	0x4a, 0x22, 0x2b, 0xd6, 0xb2, 0xf7, 0x1e, 0x26, 0x7f, 0x4f, 0x7f, 0xe1, 0x1c, 0x9f, 0xde, 0x7d,
	0x7c, 0xf6, 0xe0, 0xac, 0x6f, 0x5a, 0x44, 0xa5, 0xc2, 0x94, 0x15, 0x58, 0xa3, 0xbc, 0x45, 0x69,
	0xef, 0xb9, 0xc1, 0xf8, 0x3b, 0xfd, 0x77, 0x5f, 0xec, 0xea, 0xcf, 0xab, 0x5f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x3e, 0xdf, 0x7c, 0x32, 0x61, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackendClient is the client API for Backend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendClient interface {
	NewPlayer(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PlayerID, error)
	PerformAction(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	WorldRequest(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*WorldResponse, error)
	EntityStream(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Backend_EntityStreamClient, error)
}

type backendClient struct {
	cc *grpc.ClientConn
}

func NewBackendClient(cc *grpc.ClientConn) BackendClient {
	return &backendClient{cc}
}

func (c *backendClient) NewPlayer(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PlayerID, error) {
	out := new(PlayerID)
	err := c.cc.Invoke(ctx, "/web.Backend/NewPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) PerformAction(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/web.Backend/PerformAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) WorldRequest(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*WorldResponse, error) {
	out := new(WorldResponse)
	err := c.cc.Invoke(ctx, "/web.Backend/WorldRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) EntityStream(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Backend_EntityStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Backend_serviceDesc.Streams[0], "/web.Backend/EntityStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &backendEntityStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Backend_EntityStreamClient interface {
	Recv() (*EntityResponse, error)
	grpc.ClientStream
}

type backendEntityStreamClient struct {
	grpc.ClientStream
}

func (x *backendEntityStreamClient) Recv() (*EntityResponse, error) {
	m := new(EntityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BackendServer is the server API for Backend service.
type BackendServer interface {
	NewPlayer(context.Context, *empty.Empty) (*PlayerID, error)
	PerformAction(context.Context, *ActionRequest) (*ActionResponse, error)
	WorldRequest(context.Context, *empty.Empty) (*WorldResponse, error)
	EntityStream(*empty.Empty, Backend_EntityStreamServer) error
}

func RegisterBackendServer(s *grpc.Server, srv BackendServer) {
	s.RegisterService(&_Backend_serviceDesc, srv)
}

func _Backend_NewPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).NewPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/web.Backend/NewPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).NewPlayer(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_PerformAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).PerformAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/web.Backend/PerformAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).PerformAction(ctx, req.(*ActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_WorldRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).WorldRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/web.Backend/WorldRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).WorldRequest(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_EntityStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BackendServer).EntityStream(m, &backendEntityStreamServer{stream})
}

type Backend_EntityStreamServer interface {
	Send(*EntityResponse) error
	grpc.ServerStream
}

type backendEntityStreamServer struct {
	grpc.ServerStream
}

func (x *backendEntityStreamServer) Send(m *EntityResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Backend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "web.Backend",
	HandlerType: (*BackendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewPlayer",
			Handler:    _Backend_NewPlayer_Handler,
		},
		{
			MethodName: "PerformAction",
			Handler:    _Backend_PerformAction_Handler,
		},
		{
			MethodName: "WorldRequest",
			Handler:    _Backend_WorldRequest_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EntityStream",
			Handler:       _Backend_EntityStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/remote.proto",
}
